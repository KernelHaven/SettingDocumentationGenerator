<?xml version="1.0" encoding="UTF-8"?>

<!-- Author: Adam -->
<project name="SettingDocumentationGenerator" default="jenkins" basedir=".">
	<description>Automatically generates documentation for available configuration options</description>

	<!-- Load macro files for locations to download jars from; we don't call any targets from it -->
	<!-- Load Marcros on Jenkins -->
	<include file="../KH_KernelHaven/ant/common.xml" optional="true" />
	<!-- Load Marcros in Eclipse -->
	<include file="../KernelHaven/ant/common.xml" optional="true" />

	<!-- define our own directories -->
	<property name="build.dir" value="${basedir}/build" />
	<property name="kh_jars.dir" value="${build.dir}/kernel_haven_jars" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="gen.dir" value="${build.dir}/generated" />
	<property name="src.dir" value="${basedir}/src" />

	<!-- class path for compiling and running; includes compiled classes and all KH jars -->
	<path id="classpath.project">
		<pathelement path="${classes.dir}" />
		<fileset dir="${kh_jars.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- called by jenkins; cleans build dir and runs generator -->
	<target name="jenkins">
		<antcall target="clean" />
		<antcall target="runSettingDocumentGenerator" />
	</target>

	<!-- cleans the build directory -->
	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<!-- generates all necessary folders -->
	<target name="prepare.folders">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${kh_jars.dir}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${gen.dir}" />
	</target>

	<!-- downloads all KernelHaven jars (infrastructure and plugins) from Jenkins -->
	<target name="downloadjars" depends="prepare.folders">
		<get src="${infrastructure.main.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.CnfUtils.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.TypeChefExtractor.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.UndertakerExtractor.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.srcMLExtractor.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.FeatureEffectAnalysis.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.EntityLocatorAnalysis.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.IOUtils.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.UnDeadAnalyzer.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.MetricHaven.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.KconfigReaderExtractor.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.KbuildMinerExtractor.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.NonBooleanUtils.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.ConfigurationMismatchAnalysis.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.CodeBlockExtractor.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.DBUtils.url}" dest="${kh_jars.dir}" />
		<get src="${plugins.BusybootPreparation.url}" dest="${kh_jars.dir}/" />
	</target>

	<!-- compiles the SettingDocumentationGenerator -->
	<target name="compile" depends="downloadjars">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" debug="yes" includeantruntime="false">
			<classpath refid="classpath.project" />
		</javac>
	</target>

	<!-- runs the SettingDocumentationGenerator; output is in build/gen/config_template.properties -->
	<target name="runSettingDocumentGenerator" depends="compile">
		<java classname="net.ssehub.kernel_haven.util.SettingDocumentationGenerator" failonerror="true" output="${gen.dir}/config_template.properties">
			<!-- pass pairs of jar locations and section names -->
			<arg value="${kh_jars.dir}/KernelHaven.jar" />
			<arg value="Main Infrastructure" />

			<arg value="${kh_jars.dir}/CnfUtils.jar" />
			<arg value="CnfUtils" />
			<arg value="${kh_jars.dir}/IOUtils.jar" />
			<arg value="IOUtils" />
			<arg value="${kh_jars.dir}/NonBooleanUtils.jar" />
			<arg value="NonBooleanUtils" />
			<arg value="${kh_jars.dir}/DBUtils.jar" />
			<arg value="DBUtils" />
			<arg value="${kh_jars.dir}/BusybootPreparation.jar" />
			<arg value="BusybootPreparation" />

			<arg value="${kh_jars.dir}/FeatureEffectAnalysis.jar" />
			<arg value="FeatureEffectAnalysis" />
			<arg value="${kh_jars.dir}/MetricHaven.jar" />
			<arg value="MetricHaven" />
			<arg value="${kh_jars.dir}/UnDeadAnalyzer.jar" />
			<arg value="UnDeadAnalyzer" />
			<arg value="${kh_jars.dir}/ConfigurationMismatchAnalyis.jar" />
			<arg value="ConfigurationMismatchAnalysis" />
			<arg value="${kh_jars.dir}/EntityLocatorAnalysis.jar" />
			<arg value="EntityLocatorAnalysis" />

			<arg value="${kh_jars.dir}/KbuildMinerExtractor.jar" />
			<arg value="KbuildMinerExtractor" />
			<arg value="${kh_jars.dir}/KconfigReaderExtractor.jar" />
			<arg value="KconfigReaderExtractor" />
			<arg value="${kh_jars.dir}/srcMLExtractor.jar" />
			<arg value="SrcMlExtractor" />
			<arg value="${kh_jars.dir}/TypechefExtractor.jar" />
			<arg value="TypeChefExtractor" />
			<arg value="${kh_jars.dir}/UndertakerExtractor.jar" />
			<arg value="UndertakerExtractor" />
			<arg value="${kh_jars.dir}/CodeblockExtractor.jar" />
			<arg value="CodeBlockExtractor" />

			<classpath refid="classpath.project" />
		</java>
	</target>

</project>
